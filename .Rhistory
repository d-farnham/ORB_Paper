RIP_sim = mean(RIP_sim, na.rm = TRUE))
ggplot(melt(RIP_sim_obs, id.vars = "year"), aes(year, value, col = variable)) +
geom_line()
RIP_sim_obs
summary(RIP_sim_obs)
RIP_sim_df = data.frame(date = unique(RIP_EWD_QA_obs_MAM$date),
matrix(nrow = nrow(RIP_EWD_QA_obs_MAM), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_obs_MAM$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(RIP_EWD_QA_obs_MAM$model)){
tmp_data = RIP_EWD_QA_obs_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
warnings()
RIP_sim
rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
RIP_EWD_QA_mod
tmp_data
RIP_EWD_QA_mod = glm(RIP ~ factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
n.sims = 5
RIP_EWD_QA_obs_MAM = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::select(-c(RIP, RIP_lag1)) %>%
dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
RIP_sim_df = data.frame(date = unique(RIP_EWD_QA_obs_MAM$date),
matrix(nrow = nrow(RIP_EWD_QA_obs_MAM), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_obs_MAM$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(RIP_EWD_QA_obs_MAM$model)){
tmp_data = RIP_EWD_QA_obs_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
RIP_sim_long = melt(RIP_sim$OBS, id.vars = c("date"), variable.name = "sim", value.name = "RIP_sim")
RIP_sim_by_year = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim))
RIP_EWD_QA_obs_year = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
RIP_sim_obs = merge(RIP_EWD_QA_obs_year, RIP_sim_by_year, by = "year") %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = mean(RIP, na.rm = TRUE),
RIP_sim = mean(RIP_sim, na.rm = TRUE))
ggplot(melt(RIP_sim_obs, id.vars = "year"), aes(year, value, col = variable)) +
geom_line()
ggplot(RIP_sim_obs,aes(RIP,RIP_sim)) +
geom_jitter(width = 0.05, height = 0.05) +
geom_smooth(method = "lm") +
geom_abline(yintercept = 0, slope = 1)
ggplot(RIP_sim_obs) +
geom_boxplot(aes(factor(RIP), RIP_sim))
ggplot(RIP_sim_obs) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.15)
RIP_sim_daily = data.frame(date = RIP_sim$OBS$date,
RIP_sim = rowMeans(RIP_sim$OBS[,-c(1)]))
RIP_sim_obs_daily = merge(RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS"), RIP_sim_daily, by = "date") %>%
dplyr::select(-season, -EWD, -QA_700_anom, -model, -EWD.positive, -QA_700_sr, -RIP_lag1)
ggplot(RIP_sim_obs_daily) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.05)
n.sims = 10
RIP_EWD_QA_obs_MAM = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::select(-c(RIP, RIP_lag1)) %>%
dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
RIP_sim_df = data.frame(date = unique(RIP_EWD_QA_obs_MAM$date),
matrix(nrow = nrow(RIP_EWD_QA_obs_MAM), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_obs_MAM$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(RIP_EWD_QA_obs_MAM$model)){
tmp_data = RIP_EWD_QA_obs_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
RIP_sim_long = melt(RIP_sim$OBS, id.vars = c("date"), variable.name = "sim", value.name = "RIP_sim")
RIP_sim_by_year = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim))
RIP_EWD_QA_obs_year = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
RIP_sim_obs = merge(RIP_EWD_QA_obs_year, RIP_sim_by_year, by = "year") %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = mean(RIP, na.rm = TRUE),
RIP_sim = mean(RIP_sim, na.rm = TRUE))
ggplot(melt(RIP_sim_obs, id.vars = "year"), aes(year, value, col = variable)) +
geom_line()
ggplot(RIP_sim_obs,aes(RIP,RIP_sim)) +
geom_jitter(width = 0.05, height = 0.05) +
geom_smooth(method = "lm") +
geom_abline(yintercept = 0, slope = 1)
ggplot(RIP_sim_obs) +
geom_boxplot(aes(factor(RIP), RIP_sim))
ggplot(RIP_sim_obs) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.15)
RIP_sim_daily = data.frame(date = RIP_sim$OBS$date,
RIP_sim = rowMeans(RIP_sim$OBS[,-c(1)]))
RIP_sim_obs_daily = merge(RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS"), RIP_sim_daily, by = "date") %>%
dplyr::select(-season, -EWD, -QA_700_anom, -model, -EWD.positive, -QA_700_sr, -RIP_lag1)
ggplot(RIP_sim_obs_daily) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.05)
?predict.glm
RIP_EWD_QA_mod
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
summary(RIP_EWD_QA_mod)
n.sims = 100
RIP_EWD_QA_obs_MAM = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::select(-c(RIP, RIP_lag1)) %>%
dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
RIP_sim_df = data.frame(date = unique(RIP_EWD_QA_obs_MAM$date),
matrix(nrow = nrow(RIP_EWD_QA_obs_MAM), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_obs_MAM$model)
RIP_sim
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_obs_MAM$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(RIP_EWD_QA_obs_MAM$model)){
tmp_data = RIP_EWD_QA_obs_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
RIP_sim_long = melt(RIP_sim$OBS, id.vars = c("date"), variable.name = "sim", value.name = "RIP_sim")
RIP_sim_by_year = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim))
RIP_EWD_QA_obs_year = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
RIP_sim_obs = merge(RIP_EWD_QA_obs_year, RIP_sim_by_year, by = "year") %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = mean(RIP, na.rm = TRUE),
RIP_sim = mean(RIP_sim, na.rm = TRUE))
ggplot(melt(RIP_sim_obs, id.vars = "year"), aes(year, value, col = variable)) +
geom_line()
ggplot(RIP_sim_obs,aes(RIP,RIP_sim)) +
geom_jitter(width = 0.05, height = 0.05) +
geom_smooth(method = "lm") +
geom_abline(yintercept = 0, slope = 1)
ggplot(RIP_sim_obs) +
geom_boxplot(aes(factor(RIP), RIP_sim))
ggplot(RIP_sim_obs) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.15)
RIP_sim_daily = data.frame(date = RIP_sim$OBS$date,
RIP_sim = rowMeans(RIP_sim$OBS[,-c(1)]))
RIP_sim_obs_daily = merge(RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS"), RIP_sim_daily, by = "date") %>%
dplyr::select(-season, -EWD, -QA_700_anom, -model, -EWD.positive, -QA_700_sr, -RIP_lag1)
ggplot(RIP_sim_obs_daily) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.05)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD^2,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : pow(EWD,2),
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
?sign
RIP_EWD_QA_all_MAM = RIP_EWD_QA_all %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0),
RIP_lag1 = lag(RIP,1),
EWD_sq = sign(EWD) * EWD^2) %>%
dplyr::filter(season == "MAM")
RIP_EWD_QA_all_MAM = RIP_EWD_QA_all_MAM %>% dplyr::mutate(QA_700_sr = sign(QA_700_anom) * sqrt(QA_700_anom))
RIP_EWD_QA_all_MAM = RIP_EWD_QA_all_MAM %>% dplyr::mutate(QA_700_sr = sign(QA_700_anom) * sqrt(abs(QA_700_anom)))
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD_sq,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_sr : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_sr : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
hist(RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",]$QA_700_anom)
hist(RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",]$QA_700_sr)
RIP_EWD_QA_all_MAM = RIP_EWD_QA_all %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0),
RIP_lag1 = lag(RIP,1),
delta_QA_700_anom = QA_700_anom - lag(QA_700_anom,1),
EWD_sq = sign(EWD) * EWD^2) %>%
dplyr::filter(season == "MAM")
head()
head(RIP_EWD_QA_all_MAM)
RIP_EWD_QA_all_MAM = RIP_EWD_QA_all %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0),
RIP_lag1 = lag(RIP,1),
delta_QA_700_anom = QA_700_anom - lead(QA_700_anom,1),
EWD_sq = sign(EWD) * EWD^2) %>%
dplyr::filter(season == "MAM")
head(RIP_EWD_QA_all_MAM)
tail(RIP_EWD_QA_all_MAM)
RIP_EWD_QA_mod = glm(RIP ~ delta_QA_700_anom + EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ delta_QA_700_anom : EWD.positive + factor(RIP_lag1),
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ delta_QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ delta_QA_700_anom + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ delta_QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ delta_QA_700_anom + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ delta_QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
n.sims = 25
RIP_EWD_QA_obs_MAM = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::select(-c(RIP, RIP_lag1)) %>%
dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
RIP_sim_df = data.frame(date = unique(RIP_EWD_QA_obs_MAM$date),
matrix(nrow = nrow(RIP_EWD_QA_obs_MAM), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_obs_MAM$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(RIP_EWD_QA_obs_MAM$model)){
tmp_data = RIP_EWD_QA_obs_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
RIP_sim_long = melt(RIP_sim$OBS, id.vars = c("date"), variable.name = "sim", value.name = "RIP_sim")
RIP_sim_by_year = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim))
RIP_EWD_QA_obs_year = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
RIP_sim_obs = merge(RIP_EWD_QA_obs_year, RIP_sim_by_year, by = "year") %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = mean(RIP, na.rm = TRUE),
RIP_sim = mean(RIP_sim, na.rm = TRUE))
ggplot(melt(RIP_sim_obs, id.vars = "year"), aes(year, value, col = variable)) +
geom_line()
ggplot(RIP_sim_obs,aes(RIP,RIP_sim)) +
geom_jitter(width = 0.05, height = 0.05) +
geom_smooth(method = "lm") +
geom_abline(yintercept = 0, slope = 1)
ggplot(RIP_sim_obs) +
geom_boxplot(aes(factor(RIP), RIP_sim))
ggplot(RIP_sim_obs) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.15)
RIP_sim_daily = data.frame(date = RIP_sim$OBS$date,
RIP_sim = rowMeans(RIP_sim$OBS[,-c(1)]))
RIP_sim_obs_daily = merge(RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS"), RIP_sim_daily, by = "date") %>%
dplyr::select(-season, -EWD, -QA_700_anom, -model, -EWD.positive, -QA_700_sr, -RIP_lag1)
ggplot(RIP_sim_obs_daily) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.05)
summary(RIP_EWD_QA_mod)
RIP_EWD_QA_mod = glm(RIP ~ QA_700_anom : EWD.positive + delta_QA_700_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_QA_all_MAM[RIP_EWD_QA_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_QA_mod)
n.sims = 25
RIP_EWD_QA_obs_MAM = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::select(-c(RIP, RIP_lag1)) %>%
dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
RIP_sim_df = data.frame(date = unique(RIP_EWD_QA_obs_MAM$date),
matrix(nrow = nrow(RIP_EWD_QA_obs_MAM), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_obs_MAM$model)
RIP_EWD_QA_mod
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(RIP_EWD_QA_obs_MAM$model)){
tmp_data = RIP_EWD_QA_obs_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
n.sims = 10
RIP_EWD_QA_obs_MAM = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::select(-c(RIP, RIP_lag1)) %>%
dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
RIP_sim_df = data.frame(date = unique(RIP_EWD_QA_obs_MAM$date),
matrix(nrow = nrow(RIP_EWD_QA_obs_MAM), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_obs_MAM$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(RIP_EWD_QA_obs_MAM$model)){
tmp_data = RIP_EWD_QA_obs_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
RIP_sim_long = melt(RIP_sim$OBS, id.vars = c("date"), variable.name = "sim", value.name = "RIP_sim")
RIP_sim_by_year = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim))
RIP_EWD_QA_obs_year = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
RIP_sim_obs = merge(RIP_EWD_QA_obs_year, RIP_sim_by_year, by = "year") %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = mean(RIP, na.rm = TRUE),
RIP_sim = mean(RIP_sim, na.rm = TRUE))
ggplot(melt(RIP_sim_obs, id.vars = "year"), aes(year, value, col = variable)) +
geom_line()
ggplot(RIP_sim_obs,aes(RIP,RIP_sim)) +
geom_jitter(width = 0.05, height = 0.05) +
geom_smooth(method = "lm") +
geom_abline(yintercept = 0, slope = 1)
ggplot(RIP_sim_obs) +
geom_boxplot(aes(factor(RIP), RIP_sim))
ggplot(RIP_sim_obs) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.15)
RIP_sim_daily = data.frame(date = RIP_sim$OBS$date,
RIP_sim = rowMeans(RIP_sim$OBS[,-c(1)]))
RIP_sim_obs_daily = merge(RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS"), RIP_sim_daily, by = "date") %>%
dplyr::select(-season, -EWD, -QA_700_anom, -model, -EWD.positive, -QA_700_sr, -RIP_lag1)
ggplot(RIP_sim_obs_daily) +
geom_density(aes(RIP_sim, col = factor(RIP)), bw = 0.05)
RIP_EWD_QA_mod
n.sims = 25
RIP_EWD_QA_mod_MAM = RIP_EWD_QA_all_MAM %>% dplyr::filter(model != "OBS") %>%
dplyr::select(-c(RIP, RIP_lag1)) %>%
dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
RIP_sim_df = data.frame(date = unique(RIP_EWD_QA_mod_MAM$date),
matrix(nrow = nrow(RIP_EWD_QA_mod_MAM)/2, ncol = n.sims))
RIP_sim	= list(RIP_sim_df,RIP_sim_df)
names(RIP_sim) = unique(RIP_EWD_QA_mod_MAM$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(RIP_EWD_QA_mod_MAM$model)){
tmp_data = RIP_EWD_QA_mod_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_QA_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
save(RIP_sim, file = 'Processed_Data/historical_sim_REVISED.RData')
RIP_sim_df = do.call("rbind", RIP_sim) %>% dplyr::mutate(model = rep(1:2, each = nrow(RIP_EWD_QA_mod_MAM)/2))
RIP_sim_long = melt(RIP_sim_df, id.vars = c("date","model"), variable.name = "sim", value.name = "RIP_sim")
RIP_sim_by_year = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim, model) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim))
RIP_EWD_QA_obs_year = RIP_EWD_QA_all_MAM %>% dplyr::filter(model == "OBS") %>%
dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
RIP_pred_by_year_sim_mean = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim, model) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim)) %>%
dplyr::group_by(year, model) %>%
dplyr::summarise(RIP_sim = mean(RIP_sim))
RIP_pred_by_year_ens_mean = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim, model) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP_sim = mean(RIP_sim))
source('R/ma.R')
smoothing_window = 10
RIP_sim_by_year = RIP_sim_by_year %>% dplyr::group_by(model,sim) %>%
dplyr::mutate(RIP_sim_smooth = ma(RIP_sim, smoothing_window))
RIP_pred_by_year_sim_mean = RIP_pred_by_year_sim_mean %>% dplyr::group_by(model) %>%
dplyr::mutate(RIP_sim_smooth = ma(RIP_sim, smoothing_window))
RIP_EWD_QA_obs_year = RIP_EWD_QA_obs_year %>% dplyr::mutate(RIP_smooth = ma(RIP, smoothing_window))
RIP_sim_obs_by_year = merge(RIP_sim_by_year, RIP_EWD_QA_obs_year, by = "year") %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP_smooth = mean(RIP_smooth),
RIP_sim_smooth = mean(RIP_sim_smooth))
ggplot(RIP_sim_obs_by_year,aes(RIP_smooth,RIP_sim_smooth)) +
geom_jitter() +
geom_smooth(method = "lm") +
geom_abline(yintercept = 0, slope = 1)
plot(RIP_sim_obs_by_year$RIP_sim_smooth, RIP_sim_obs_by_year$RIP_smooth)
RIP_pred_by_year_ens_mean = RIP_pred_by_year_ens_mean %>% dplyr::mutate(RIP_sim_smooth = ma(RIP_sim, smoothing_window))
line.width = 1
alpha.line = 1
col.line = "grey80"
RIP_mod_obs_compare_1 =
ggplot() +
geom_line(data = RIP_sim_by_year[RIP_sim_by_year$model == 1,],
aes(year, y = RIP_sim_smooth, group = sim),
linetype = "dashed", size = line.width/4, col = col.line) +
geom_line(data = RIP_sim_by_year[RIP_sim_by_year$model == 2,],
aes(year, y = RIP_sim_smooth, group = sim),
linetype = "dashed", size = line.width/4, col = col.line) +
geom_line(data = RIP_sim_by_year[RIP_sim_by_year$model == 3,],
aes(year, y = RIP_sim_smooth, group = sim),
linetype = "dashed", size = line.width/4, col = col.line) +
geom_line(data = RIP_sim_by_year[RIP_sim_by_year$model == 4,],
aes(year, y = RIP_sim_smooth, group = sim),
linetype = "dashed", size = line.width/4, col = col.line) +
geom_line(data = RIP_sim_by_year[RIP_sim_by_year$model == 5,],
aes(year, y = RIP_sim_smooth, group = sim),
linetype = "dashed", size = line.width/4, col = col.line) +
geom_line(data = RIP_pred_by_year_sim_mean,
aes(year, y = RIP_sim_smooth, group = model),
linetype = "dashed", size = line.width/2) +
geom_line(data = RIP_pred_by_year_ens_mean,
aes(year, y = RIP_sim_smooth),
linetype = "dashed", size = line.width, col = "red") +
geom_line(data = RIP_EWD_QA_obs_year,
aes(year, y = RIP_smooth),
linetype = "solid", size = line.width) +
ylab("# RIP") +
coord_cartesian(xlim = c(1955,2006),
ylim = c(0,5.5)) +
xlab("Year") +
annotate("text", label = c("a)"), x = 1956, y = 5.3, size = 6, colour = "black") +
theme_bw()
bin_breaks = seq(-0.5,12.5,1)
bin_labels = as.character(bin_breaks-0.5)
hist_lims = data.frame(xlim = c(0.5,11.6),
ylim = c(0,40))
RIP_mod_obs_compare_2 =
ggplot() +
stat_bin(data = RIP_sim_by_year[RIP_sim_by_year$model == 1,],
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed", size = line.width/2,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year[RIP_sim_by_year$model == 2,],
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed", size = line.width/2,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year,
aes(x = RIP_sim, y =..count../(25*2)),
geom = "step", linetype = "dashed", size = line.width,
breaks = bin_breaks, col = "red") +
stat_bin(data = RIP_EWD_QA_obs_year,
aes(x = RIP, y=..count..),
geom = "step", size = line.width,
breaks = bin_breaks) +
annotate("text", label = "b)", x = 0.75, y = 38.75, size = 6, colour = "black") +
labs(x = "# RIP",
y = "count") +
coord_cartesian(xlim = hist_lims$xlim,
ylim = hist_lims$ylim) +
scale_x_continuous(breaks = bin_breaks,
labels = bin_labels) +
theme_bw()
pdf('Final figures/REVISED/Figure_10.pdf', width = 11, height = 2.75)
grid.arrange(RIP_mod_obs_compare_1,
RIP_mod_obs_compare_2,
nrow = 1)
dev.off()
RIP_lag_obs = RIP_EWD_MHC_all_MAM %>% dplyr::filter(model == "OBS",
season == "MAM") %>%
dplyr::mutate(RIP_lag1 = lag(RIP, 1),
RIP_lag_4_7 = ifelse(lag(RIP, 4) == 1, 1,
ifelse(lag(RIP, 5) == 1, 1,
ifelse(lag(RIP, 6) == 1, 1,
ifelse(lag(RIP, 7) == 1, 1,0))))) %>%
dplyr::select(c(date, RIP, season , RIP_lag1, RIP_lag_4_7))
summary(RIP_EWD_QA_mod)
