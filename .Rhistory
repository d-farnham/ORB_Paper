ylim = c(0,5.5)) +
xlab("Year") +
annotate("text", label = c("a)"), x = 1956, y = 5.3, size = 6, colour = "black") +
theme_bw()
bin_breaks = seq(-0.5,12.5,1)
bin_labels = as.character(bin_breaks-0.5)
hist_lims = data.frame(xlim = c(0.5,11.6),
ylim = c(0,40))
RIP_mod_obs_compare_2 =
ggplot() +
stat_bin(data = RIP_sim_by_year[RIP_sim_by_year$model == 1,],
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed", size = line.width/2,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year[RIP_sim_by_year$model == 2,],
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed", size = line.width/2,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year[RIP_sim_by_year$model == 3,],
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed", size = line.width/2,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year[RIP_sim_by_year$model == 4,],
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed", size = line.width/2,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year[RIP_sim_by_year$model == 5,],
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed", size = line.width/2,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year,
aes(x = RIP_sim, y =..count../(25*5)),
geom = "step", linetype = "dashed", size = line.width,
breaks = bin_breaks, col = "red") +
stat_bin(data = RIP_EWD_MHC_obs_year,
aes(x = RIP, y=..count..),
geom = "step", size = line.width,
breaks = bin_breaks) +
annotate("text", label = "b)", x = 0.75, y = 38.75, size = 6, colour = "black") +
labs(x = "# RIP",
y = "count") +
coord_cartesian(xlim = hist_lims$xlim,
ylim = hist_lims$ylim) +
scale_x_continuous(breaks = bin_breaks,
labels = bin_labels) +
theme_bw()
pdf('Final figures/Figure_S9.pdf', width = 11, height = 2.75)
grid.arrange(RIP_mod_obs_compare_1,
RIP_mod_obs_compare_2,
nrow = 1)
dev.off()
STOPPPPPPEDDDDD HEREEEE
rm(list = ls())
source("R/GetSeasonDate.R")
# Simulate the future projections based on the EWD and MHC anom indices from the future record (RCP 8.5)
# load RIP/EWD/MHC records
load(file = 'Processed_Data/RIP_EWD_MHC_all.RData')
# add EWD "+" indicator and retain the MAM season
RIP_EWD_MHC_all_MAM = RIP_EWD_MHC_all %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0),
RIP_lag1 = lag(RIP,1)) %>%
dplyr::filter(season == "MAM")
# fit the model on the observations
RIP_EWD_MHC_mod = glm(RIP ~ MHC_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model == "OBS",], family = binomial(link = "logit"))
# load and process the future records
load(file = "Processed_Data/EWD_mod_future.RData")
load(file = "Processed_Data/MHC_mod_future.RData")
load(file = 'Processed_Data/mod_RIP_future.RData')
EWD_MHC_mod_future = merge(EWD_mod_future,MHC_mod_future,by = c("date","season","model")) %>%
dplyr::select(c(date, season, model, RIP, EWD, MHC_anom)) %>%
dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0)) %>%
dplyr::filter(season == "MAM")
EWD_MHC_mod_future_sim = EWD_MHC_mod_future %>% dplyr::filter(model != "OBS") %>%
dplyr::select(-RIP, -RIP_lag1)
# intialize the first RIP_lag1 as 0 for each model for each year
EWD_MHC_mod_future_MAM = EWD_MHC_mod_future_MAM %>% dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
n.sims = 25
RIP_sim_df = data.frame(date = unique(EWD_MHC_mod_future_MAM$date),
matrix(nrow = nrow(EWD_MHC_mod_future_MAM), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(EWD_MHC_mod_future_MAM$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(EWD_MHC_mod_future_MAM$model)){
tmp_data = EWD_MHC_mod_future_MAM %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_MHC_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
RIP_sim_df = do.call("rbind", RIP_sim)
RIP_sim_long = melt(RIP_sim_df, id.vars = c("date"), variable.name = "sim", value.name = "RIP_sim")
RIP_sim_by_year = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim))
RIP_EWD_MHC_mod_raw_year = mod_RIP_future %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
# calculate the mean for each member and the full ensemble mean
RIP_pred_by_year_sim_mean = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP_sim = mean(RIP_sim))
# mark whether the record is in the first 45 years (2006-2050)
# or the last 45 years (2056-2100)
RIP_sim_by_year = RIP_sim_by_year %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
RIP_EWD_MHC_mod_raw_year = RIP_EWD_MHC_mod_raw_year %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
RIP_pred_by_year_sim_mean = RIP_pred_by_year_sim_mean %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
# function to compute moving average
source('R/ma.R')
smoothing_window = 10
RIP_sim_by_year = RIP_sim_by_year %>% dplyr::group_by(sim) %>%
dplyr::mutate(RIP_smooth = ma(RIP_sim, smoothing_window))
RIP_EWD_MHC_mod_raw_year = RIP_EWD_MHC_mod_raw_year %>% dplyr::mutate(RIP_smooth = ma(RIP, smoothing_window))
RIP_pred_by_year_sim_mean = RIP_pred_by_year_sim_mean %>% dplyr::mutate(RIP_smooth = ma(RIP_sim, smoothing_window))
# look at the number of RIPs per year from the first and last year
# 2006-2025
mean(RIP_EWD_MHC_mod_raw_year[RIP_EWD_MHC_mod_raw_year$year < 2026,]$RIP)
# [1] 1.95
# 2081-2100
mean(RIP_EWD_MHC_mod_raw_year[RIP_EWD_MHC_mod_raw_year$year > 2080,]$RIP)
# [1] 3.9
# 2006-2025
mean(RIP_sim_by_year[RIP_sim_by_year$year < 2026,]$RIP_sim)
# [1] 1.248
# 2007-2026
mean(RIP_sim_by_year[RIP_sim_by_year$year > 2080,]$RIP_sim)
# [1] 2.496
line.width = 1
alpha.line = 0.1
col.line = "grey"
RIP_mod_future_sim_1 =
ggplot() +
geom_line(data = RIP_sim_by_year,
aes(year, y = RIP_smooth, group = sim),
size = line.width/2, col = col.line, linetype = "dashed") +
geom_line(data = RIP_pred_by_year_sim_mean,
aes(year, y = RIP_smooth),
size = line.width, linetype = "dashed") +
geom_line(data = RIP_EWD_MHC_mod_raw_year,
aes(year, y = RIP_smooth),
size = line.width) +
ylab("# RIP") +
annotate("text", label = c("a)"), x = 2006, y = 5.3, size = 6, colour = "black") +
coord_cartesian(ylim = c(0,5.6)) +
xlab("Year") +
theme_bw()
# exclude the middle few years between the first and last 45 years of the simulation
RIP_EWD_MHC_mod_raw_year_subset = RIP_EWD_MHC_mod_raw_year %>% dplyr::filter(period != "2051-2055")
RIP_sim_by_year_subset = RIP_sim_by_year %>% dplyr::filter(period != "2051-2055")
bin_breaks = seq(-0.5,13.5,1)
bin_labels = as.character(bin_breaks-0.5)
RIP_mod_future_sim_2 =
ggplot() +
stat_bin(data = RIP_EWD_MHC_mod_raw_year_subset,
aes(x = RIP, y =..count..),
geom = "step",size = line.width,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year_subset,
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed",size = line.width,
breaks = bin_breaks) +
annotate("text", label = c("b)","c)"), period = c("2006-2050","2056-2100"), x = 0.5, y = 18, size = 6, colour = "black") +
facet_wrap(~period,
ncol = 1) +
xlab("# RIP") +
ylab("count") +
coord_cartesian(xlim = c(0.5,12.6), ylim = c(0,20)) +
scale_x_continuous(breaks = bin_breaks,
labels = bin_labels) +
theme_bw()
lay = rbind(c(1,1,1,2,2))
pdf('Final figures/Figure_12.pdf', width = 11, height = 3.5)
grid.arrange(RIP_mod_future_sim_1,
RIP_mod_future_sim_2,
nrow = 1,
layout_matrix = lay)
dev.off()
########################################
############### Figure 13 ##############
########################################
rm(list = ls())
load(file = 'Processed_Data/RIP_EWD_MHC_all.RData')
# add EWD "+" indicator and retain the MAM season
RIP_EWD_MHC_all_MAM = RIP_EWD_MHC_all %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0),
RIP_lag1 = lag(RIP,1)) %>%
dplyr::filter(season == "MAM")
# fit the model on the observations
RIP_EWD_MHC_mod = glm(RIP ~ MHC_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_MHC_mod)
# load and process the historic future records
load(file = "Processed_Data/EWD_mod_future.RData")
load(file = "Processed_Data/MHC_mod_future.RData")
load(file = 'Processed_Data/mod_RIP_future.RData')
EWD_MHC_mod_future = merge(EWD_mod_future,MHC_mod_future,by = c("date","season","model")) %>%
dplyr::select(c(date, season, model, EWD, MHC_anom))
# add EWD "+" indicator and just retain the MAM season
EWD_MHC_mod_future_MAM = EWD_MHC_mod_future %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0)) %>%
dplyr::filter(season == "MAM")
# compute the old and future EWD and MHC averages -- try to partition the effects of the EWD and MHC
EWD_mean_1970_99 = mean(RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model != "OBS" &
RIP_EWD_MHC_all_MAM$date > "1969-12-31" &
RIP_EWD_MHC_all_MAM$date < "2000-01-01",]$EWD, na.rm = TRUE)
EWD_mean_2070_99 = mean(EWD_MHC_mod_future_MAM[EWD_MHC_mod_future_MAM$model == 1 &
EWD_MHC_mod_future_MAM$date > "2069-12-31" &
EWD_MHC_mod_future_MAM$date < "2100-01-01",]$EWD, na.rm = TRUE)
EWD_bias = EWD_mean_2070_99 - EWD_mean_1970_99
MHC_mean_1970_99 = mean(RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model != "OBS" &
RIP_EWD_MHC_all_MAM$date > "1969-12-31" &
RIP_EWD_MHC_all_MAM$date < "2000-01-01",]$MHC_anom, na.rm = TRUE)
MHC_mean_2070_99 = mean(EWD_MHC_mod_future_MAM[EWD_MHC_mod_future_MAM$model == 1 &
EWD_MHC_mod_future_MAM$date > "2069-12-31" &
EWD_MHC_mod_future_MAM$date < "2100-01-01",]$MHC_anom, na.rm = TRUE)
rm(list = ls())
source("R/GetSeasonDate.R")
load(file = 'Processed_Data/RIP_EWD_MHC_all.RData')
RIP_EWD_MHC_all_MAM = RIP_EWD_MHC_all %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0),
RIP_lag1 = lag(RIP,1)) %>%
dplyr::filter(season == "MAM")
RIP_EWD_MHC_mod = glm(RIP ~ MHC_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model == "OBS",], family = binomial(link = "logit"))
load(file = "Processed_Data/EWD_mod_future.RData")
load(file = "Processed_Data/MHC_mod_future.RData")
load(file = 'Processed_Data/mod_RIP_future.RData')
EWD_MHC_mod_future = merge(EWD_mod_future,MHC_mod_future,by = c("date","season","model")) %>%
dplyr::select(c(date, season, model, RIP, EWD, MHC_anom)) %>%
dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0)) %>%
dplyr::filter(season == "MAM")
EWD_MHC_mod_future = merge(EWD_mod_future,MHC_mod_future,by = c("date","season","model")) %>%
dplyr::select(c(date, season, model, EWD, MHC_anom)) %>%
dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0)) %>%
dplyr::filter(season == "MAM")
EWD_MHC_mod_future_sim = EWD_MHC_mod_future %>% dplyr::filter(model != "OBS")
EWD_MHC_mod_future_MAM = EWD_MHC_mod_future_MAM %>% dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
EWD_MHC_mod_future_sim = EWD_MHC_mod_future_sim %>% dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
rm(list = ls())
source("R/GetSeasonDate.R")
# Simulate the future projections based on the EWD and MHC anom indices from the future record (RCP 8.5)
# load RIP/EWD/MHC records
load(file = 'Processed_Data/RIP_EWD_MHC_all.RData')
# add EWD "+" indicator and retain the MAM season
RIP_EWD_MHC_all_MAM = RIP_EWD_MHC_all %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0),
RIP_lag1 = lag(RIP,1)) %>%
dplyr::filter(season == "MAM")
# fit the model on the observations
RIP_EWD_MHC_mod = glm(RIP ~ MHC_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model == "OBS",], family = binomial(link = "logit"))
# load and process the future records
load(file = "Processed_Data/EWD_mod_future.RData")
load(file = "Processed_Data/MHC_mod_future.RData")
load(file = 'Processed_Data/mod_RIP_future.RData')
EWD_MHC_mod_future = merge(EWD_mod_future,MHC_mod_future,by = c("date","season","model")) %>%
dplyr::select(c(date, season, model, EWD, MHC_anom)) %>%
dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0)) %>%
dplyr::filter(season == "MAM")
EWD_MHC_mod_future_sim = EWD_MHC_mod_future %>% dplyr::filter(model != "OBS")
# intialize the first RIP_lag1 as 0 for each model for each year
EWD_MHC_mod_future_sim = EWD_MHC_mod_future_sim %>% dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
n.sims = 25
RIP_sim_df = data.frame(date = unique(EWD_MHC_mod_future_sim$date),
matrix(nrow = nrow(EWD_MHC_mod_future_sim), ncol = n.sims))
RIP_sim	= list(RIP_sim_df)
names(RIP_sim) = unique(EWD_MHC_mod_future_sim$model)
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(EWD_MHC_mod_future_sim$model)){
tmp_data = EWD_MHC_mod_future_sim %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_MHC_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
RIP_sim_df = do.call("rbind", RIP_sim)
RIP_sim_long = melt(RIP_sim_df, id.vars = c("date"), variable.name = "sim", value.name = "RIP_sim")
RIP_sim_by_year = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim))
RIP_EWD_MHC_mod_raw_year = mod_RIP_future %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
RIP_pred_by_year_sim_mean = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP_sim = mean(RIP_sim))
RIP_sim_by_year = RIP_sim_by_year %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
RIP_EWD_MHC_mod_raw_year = RIP_EWD_MHC_mod_raw_year %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
RIP_pred_by_year_sim_mean = RIP_pred_by_year_sim_mean %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
source('R/ma.R')
smoothing_window = 10
RIP_sim_by_year = RIP_sim_by_year %>% dplyr::group_by(sim) %>%
dplyr::mutate(RIP_smooth = ma(RIP_sim, smoothing_window))
RIP_EWD_MHC_mod_raw_year = RIP_EWD_MHC_mod_raw_year %>% dplyr::mutate(RIP_smooth = ma(RIP, smoothing_window))
RIP_pred_by_year_sim_mean = RIP_pred_by_year_sim_mean %>% dplyr::mutate(RIP_smooth = ma(RIP_sim, smoothing_window))
mean(RIP_EWD_MHC_mod_raw_year[RIP_EWD_MHC_mod_raw_year$year < 2026,]$RIP)
mean(RIP_EWD_MHC_mod_raw_year[RIP_EWD_MHC_mod_raw_year$year > 2080,]$RIP)
mean(RIP_sim_by_year[RIP_sim_by_year$year < 2026,]$RIP_sim)
mean(RIP_sim_by_year[RIP_sim_by_year$year > 2080,]$RIP_sim)
head(mod_RIP_future)
tail(mod_RIP_future)
head(RIP_sim_long)
RIP_EWD_MHC_mod_raw_year = mod_RIP_future %>% dplyr::filter(season == "MAM") %>%
dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP = sum(RIP))
RIP_pred_by_year_sim_mean = RIP_sim_long %>% dplyr::mutate(year = lubridate::year(date)) %>%
dplyr::group_by(year, sim) %>%
dplyr::summarise(RIP_sim = sum(RIP_sim)) %>%
dplyr::group_by(year) %>%
dplyr::summarise(RIP_sim = mean(RIP_sim))
RIP_sim_by_year = RIP_sim_by_year %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
RIP_EWD_MHC_mod_raw_year = RIP_EWD_MHC_mod_raw_year %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
RIP_pred_by_year_sim_mean = RIP_pred_by_year_sim_mean %>% dplyr::mutate(period = ifelse(year < 2051, "2006-2050",
ifelse(year > 2055,"2056-2100", "2051-2055")))
source('R/ma.R')
smoothing_window = 10
RIP_sim_by_year = RIP_sim_by_year %>% dplyr::group_by(sim) %>%
dplyr::mutate(RIP_smooth = ma(RIP_sim, smoothing_window))
RIP_EWD_MHC_mod_raw_year = RIP_EWD_MHC_mod_raw_year %>% dplyr::mutate(RIP_smooth = ma(RIP, smoothing_window))
RIP_pred_by_year_sim_mean = RIP_pred_by_year_sim_mean %>% dplyr::mutate(RIP_smooth = ma(RIP_sim, smoothing_window))
mean(RIP_EWD_MHC_mod_raw_year[RIP_EWD_MHC_mod_raw_year$year < 2026,]$RIP)
mean(RIP_EWD_MHC_mod_raw_year[RIP_EWD_MHC_mod_raw_year$year > 2080,]$RIP)
mean(RIP_sim_by_year[RIP_sim_by_year$year < 2026,]$RIP_sim)
mean(RIP_sim_by_year[RIP_sim_by_year$year > 2080,]$RIP_sim)
line.width = 1
alpha.line = 0.1
col.line = "grey"
RIP_mod_future_sim_1 =
ggplot() +
geom_line(data = RIP_sim_by_year,
aes(year, y = RIP_smooth, group = sim),
size = line.width/2, col = col.line, linetype = "dashed") +
geom_line(data = RIP_pred_by_year_sim_mean,
aes(year, y = RIP_smooth),
size = line.width, linetype = "dashed") +
geom_line(data = RIP_EWD_MHC_mod_raw_year,
aes(year, y = RIP_smooth),
size = line.width) +
ylab("# RIP") +
annotate("text", label = c("a)"), x = 2006, y = 5.3, size = 6, colour = "black") +
coord_cartesian(ylim = c(0,5.6)) +
xlab("Year") +
theme_bw()
RIP_EWD_MHC_mod_raw_year_subset = RIP_EWD_MHC_mod_raw_year %>% dplyr::filter(period != "2051-2055")
RIP_sim_by_year_subset = RIP_sim_by_year %>% dplyr::filter(period != "2051-2055")
bin_breaks = seq(-0.5,13.5,1)
bin_labels = as.character(bin_breaks-0.5)
RIP_mod_future_sim_2 =
ggplot() +
stat_bin(data = RIP_EWD_MHC_mod_raw_year_subset,
aes(x = RIP, y =..count..),
geom = "step",size = line.width,
breaks = bin_breaks) +
stat_bin(data = RIP_sim_by_year_subset,
aes(x = RIP_sim, y =..count../25),
geom = "step", linetype = "dashed",size = line.width,
breaks = bin_breaks) +
annotate("text", label = c("b)","c)"), period = c("2006-2050","2056-2100"), x = 0.5, y = 18, size = 6, colour = "black") +
facet_wrap(~period,
ncol = 1) +
xlab("# RIP") +
ylab("count") +
coord_cartesian(xlim = c(0.5,12.6), ylim = c(0,20)) +
scale_x_continuous(breaks = bin_breaks,
labels = bin_labels) +
theme_bw()
lay = rbind(c(1,1,1,2,2))
pdf('Final figures/Figure_12.pdf', width = 11, height = 3.5)
grid.arrange(RIP_mod_future_sim_1,
RIP_mod_future_sim_2,
nrow = 1,
layout_matrix = lay)
dev.off()
rm(list = ls())
load(file = 'Processed_Data/RIP_EWD_MHC_all.RData')
# add EWD "+" indicator and retain the MAM season
RIP_EWD_MHC_all_MAM = RIP_EWD_MHC_all %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0),
RIP_lag1 = lag(RIP,1)) %>%
dplyr::filter(season == "MAM")
# fit the model on the observations
RIP_EWD_MHC_mod = glm(RIP ~ MHC_anom : EWD.positive + factor(RIP_lag1) : EWD,
data = RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model == "OBS",], family = binomial(link = "logit"))
summary(RIP_EWD_MHC_mod)
# load and process the historic future records
load(file = "Processed_Data/EWD_mod_future.RData")
load(file = "Processed_Data/MHC_mod_future.RData")
load(file = 'Processed_Data/mod_RIP_future.RData')
EWD_MHC_mod_future = merge(EWD_mod_future,MHC_mod_future,by = c("date","season","model")) %>%
dplyr::select(c(date, season, model, EWD, MHC_anom))
# add EWD "+" indicator and just retain the MAM season
EWD_MHC_mod_future_MAM = EWD_MHC_mod_future %>% dplyr::mutate(EWD.positive = ifelse(EWD > 0, 1, 0)) %>%
dplyr::filter(season == "MAM")
# compute the old and future EWD and MHC averages -- try to partition the effects of the EWD and MHC
EWD_mean_1970_99 = mean(RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model != "OBS" &
RIP_EWD_MHC_all_MAM$date > "1969-12-31" &
RIP_EWD_MHC_all_MAM$date < "2000-01-01",]$EWD, na.rm = TRUE)
EWD_mean_2070_99 = mean(EWD_MHC_mod_future_MAM[EWD_MHC_mod_future_MAM$model == 1 &
EWD_MHC_mod_future_MAM$date > "2069-12-31" &
EWD_MHC_mod_future_MAM$date < "2100-01-01",]$EWD, na.rm = TRUE)
EWD_bias = EWD_mean_2070_99 - EWD_mean_1970_99
MHC_mean_1970_99 = mean(RIP_EWD_MHC_all_MAM[RIP_EWD_MHC_all_MAM$model != "OBS" &
RIP_EWD_MHC_all_MAM$date > "1969-12-31" &
RIP_EWD_MHC_all_MAM$date < "2000-01-01",]$MHC_anom, na.rm = TRUE)
MHC_mean_2070_99 = mean(EWD_MHC_mod_future_MAM[EWD_MHC_mod_future_MAM$model == 1 &
EWD_MHC_mod_future_MAM$date > "2069-12-31" &
EWD_MHC_mod_future_MAM$date < "2100-01-01",]$MHC_anom, na.rm = TRUE)
MHC_bias = MHC_mean_2070_99 - MHC_mean_1970_99
EWD_MHC_partition_hist = RIP_EWD_MHC_all_MAM %>% dplyr::filter(model != "OBS" &
date > "1969-12-31" &
date < "2000-01-01")
# intialize the first RIP_lag1 as 0 for each model for each year
EWD_MHC_partition_hist = EWD_MHC_partition_hist %>% dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1,
0, NA))
n.sims = 25
RIP_sim_df = data.frame(date = unique(EWD_MHC_partition_hist$date),
matrix(nrow = nrow(EWD_MHC_partition_hist)/5, ncol = n.sims))
RIP_sim	= list(RIP_sim_df,RIP_sim_df,RIP_sim_df,RIP_sim_df,RIP_sim_df)
names(RIP_sim) = unique(EWD_MHC_partition_hist$model)
time.nowwwww = proc.time()
set.seed(0)
for(nn in 1:n.sims){
for(mmod in unique(EWD_MHC_partition_hist$model)){
tmp_data = EWD_MHC_partition_hist %>% dplyr::filter(model == mmod)
for(rrow in 1:nrow(tmp_data)){
RIP_sim[[mmod]][rrow,nn+1] = rbinom(1, 1, prob = predict.glm(RIP_EWD_MHC_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = RIP_sim[[mmod]][rrow,nn+1]
}
print(paste0("model #", mmod, " complete (sim #", nn, ")"))
}
}
print(proc.time() - time.nowwwww)
RIP_sim_df = do.call("rbind", RIP_sim)
mean_1970_1999 = sum(RIP_sim_df[,-c(1)])/n.sims/5
mean_1970_1999
# [1] 25.656
EWD_MHC_partition_future = EWD_MHC_mod_future_MAM %>% dplyr::filter(date > "2069-12-31") %>%
dplyr::mutate(RIP_lag1 = ifelse(lubridate::month(date) == 3 & lubridate::day(date) == 1, 0, NA))
EWD_MHC_partition_EWD_change = EWD_MHC_partition_future %>% dplyr::mutate(MHC_anom = MHC_anom - MHC_bias)
EWD_MHC_partition_MHC_change = EWD_MHC_partition_future %>% dplyr::mutate(EWD = EWD - EWD_bias,
EWD.positive = ifelse(EWD > 0, 1, 0))
n.sims = 100
both_pred = data.frame(matrix(nrow = nrow(EWD_MHC_partition_future), ncol = n.sims))
EWD_pred = data.frame(matrix(nrow = nrow(EWD_MHC_partition_future), ncol = n.sims))
MHC_pred = data.frame(matrix(nrow = nrow(EWD_MHC_partition_future), ncol = n.sims))
# first both pred
set.seed(0)
for(nn in 1:n.sims){
tmp_data = EWD_MHC_partition_future
for(rrow in 1:nrow(tmp_data)){
both_pred[rrow,nn] = rbinom(1, 1, prob = predict.glm(RIP_EWD_MHC_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = both_pred[rrow,nn]
}
print(paste0("sim #", nn, " complete"))
}
# now EWD change
set.seed(0)
for(nn in 1:n.sims){
tmp_data = EWD_MHC_partition_EWD_change
for(rrow in 1:nrow(tmp_data)){
EWD_pred[rrow,nn] = rbinom(1, 1, prob = predict.glm(RIP_EWD_MHC_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = EWD_pred[rrow,nn]
}
print(paste0("sim #", nn, " complete"))
}
# now MHC change
set.seed(0)
for(nn in 1:n.sims){
tmp_data = EWD_MHC_partition_MHC_change
for(rrow in 1:nrow(tmp_data)){
MHC_pred[rrow,nn] = rbinom(1, 1, prob = predict.glm(RIP_EWD_MHC_mod, newdata = tmp_data[rrow,], type = "response"))
tmp_data[rrow + 1,]$RIP_lag1 = MHC_pred[rrow,nn]
}
print(paste0("sim #", nn, " complete"))
}
plot_future = data.frame(Model = c(rep("EWD & MHC increase (2070-2099)",n.sims),
rep("EWD increase (2070-2099)",n.sims),
rep("MHC increase (2070-2099)",n.sims)),
value = c(colSums(both_pred), colSums(EWD_pred), colSums(MHC_pred)) - mean_1970_1999)
plot_future_medians = plot_future %>% dplyr::group_by(Model) %>%
dplyr::summarise(mean_value = mean(value))
save(plot_future, file = "Processed_Data/plot_future.RData")
pdf("Final figures/Figure_13.pdf", height = 3, width = 8)
ggplot(plot_future) +
geom_histogram(aes(x = value, fill = Model),
alpha = 0.5, position="identity", breaks = c(seq(-5,75,by = 5))) +
geom_vline(data = plot_future_medians, aes(xintercept = mean_value, col = Model)) +
labs(x = expression(Delta ~ "# RIPs relative to (1970-1999)"),
y = "# of simulations") +
theme_bw() +
theme(legend.position = "bottom")
dev.off()
# median percentage increases?
round(plot_future_medians$mean_value/mean_1970_1999 * 100 / 1)*1
# [1] 188  66 104
